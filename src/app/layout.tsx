"use client";

import { Geist, Geist_Mono } from "next/font/google";
import { PrivyProvider } from "@privy-io/react-auth";
import { ConvexProvider, ConvexReactClient } from "convex/react";
import { ThemeProvider } from "@/components/theme-provider";
import { env } from "@/env.mjs";
import "./globals.css";
import { toSolanaWalletConnectors } from "@privy-io/react-auth/solana";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const PRIVY_APP_ID = env.NEXT_PUBLIC_PRIVY_APP_ID;
const convex = new ConvexReactClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange
        >
          <ConvexProvider client={convex}>
            <PrivyProvider
              appId={PRIVY_APP_ID}
              config={{
                // Customize Privy's appearance for Solana-only
                appearance: {
                  theme: "dark",
                  accentColor: "#676FFF",
                  // Configure for Solana only
                  walletChainType: "solana-only",
                  // Prioritize popular Solana wallets - order matters!
                  walletList: [
                    'phantom',           // Most popular Solana wallet - show first
                    'solflare',          // Feature-rich Solana wallet - second
                    'backpack',          // Modern Solana wallet - third
                    'coinbase_wallet',   // Institutional wallet with Solana support
                    'okx_wallet',        // Professional trading wallet
                    'detected_solana_wallets', // Any other detected Solana wallets
                    'wallet_connect',    // For mobile wallet connections
                  ],
                  // TODO: replace with proper logo
                  logo: "https://867bw7rqa6.ufs.sh/f/cGZ8tFrF8tOmH78IKBXM1SzoQ3uEIKNXedD6tx85Gb72WpcT"
                },
                // Configure login methods - wallet only authentication
                loginMethods: ["email", "wallet"],
                // Create embedded Solana wallets for users without external wallets
                embeddedWallets: {
                  createOnLogin: "users-without-wallets",
                  solana: {
                    createOnLogin: "users-without-wallets",
                  },
                },
                externalWallets: {
                  solana: {
                    connectors: toSolanaWalletConnectors(),
                  },
                },
              }}
            >
              {children}
            </PrivyProvider>
          </ConvexProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
